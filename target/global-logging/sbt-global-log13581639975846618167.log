[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\CRUX\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\CRUX\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.5 (Oracle Corporation Java 15.0.1)
[debug]       Load.loadUnit: plugins took 122.6641ms
[debug]       Load.loadUnit: defsScala took 0.3758ms
[debug] [Loading] Scanning directory C:\Users\CRUX\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\CRUX\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 23.5257 ms
[debug]           Load.resolveProject(global-plugins) took 42.825ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\CRUX\.sbt\1.0\plugins, plugins: List(<none>))) took 96.2719ms
[debug] [Loading] Done in C:\Users\CRUX\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 124.5674ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2111ms
[debug]     Load.loadUnit(file:/C:/Users/CRUX/.sbt/1.0/plugins/, ...) took 261.0525ms
[debug]   Load.apply: load took 586.1512ms
[debug]   Load.apply: resolveProjects took 5.5184ms
[debug]   Load.apply: finalTransforms took 55.9537ms
[debug]   Load.apply: config.delegates took 10.6515ms
[debug]   Load.apply: Def.make(settings)... took 1148.1588ms
[debug]   Load.apply: structureIndex took 119.668ms
[debug]   Load.apply: mkStreams took 1.8565ms
[info] loading global plugins from C:\Users\CRUX\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3774.4631ms
[debug]           Load.loadUnit: plugins took 26.6901ms
[debug]           Load.loadUnit: defsScala took 0.0043ms
[debug] [Loading] Scanning directory C:\Users\CRUX\IdeaProjects\scalalearning\project
[debug]             Load.loadUnit: mkEval took 6.7261ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\CRUX\IdeaProjects\scalalearning\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.4296 ms
[info] loading settings for project scalalearning-build from idea.sbt ...
[debug]               Load.resolveProject(scalalearning-build) took 4.5543ms
[debug]             Load.loadTransitive: finalizeProject(Project(id scalalearning-build, base: C:\Users\CRUX\IdeaProjects\scalalearning\project, plugins: List(<none>))) took 7.7955ms
[debug] [Loading] Done in C:\Users\CRUX\IdeaProjects\scalalearning\project, returning: (scalalearning-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 132.4016ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.023ms
[debug]         Load.loadUnit(file:/C:/Users/CRUX/IdeaProjects/scalalearning/project/, ...) took 167.1874ms
[debug]       Load.apply: load took 169.6094ms
[debug]       Load.apply: resolveProjects took 0.1411ms
[debug]       Load.apply: finalTransforms took 14.9031ms
[debug]       Load.apply: config.delegates took 0.4424ms
[debug]       Load.apply: Def.make(settings)... took 106.4034ms
[debug]       Load.apply: structureIndex took 37.9661ms
[debug]       Load.apply: mkStreams took 0.0034ms
[info] loading project definition from C:\Users\CRUX\IdeaProjects\scalalearning\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 675.6715ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\CRUX\IdeaProjects\scalalearning
[debug]       Load.loadUnit: mkEval took 0.4334ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\CRUX\IdeaProjects\scalalearning, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.2999 ms
[info] loading settings for project scalalearning from build.sbt ...
[debug]         Load.resolveProject(scalalearning) took 38.509ms
[debug]       Load.loadTransitive: finalizeProject(Project(id scalalearning, base: C:\Users\CRUX\IdeaProjects\scalalearning, plugins: List(<none>))) took 42.0399ms
[debug] [Loading] Done in C:\Users\CRUX\IdeaProjects\scalalearning, returning: (scalalearning)
[debug]     Load.loadUnit: loadedProjectsRaw took 85.2422ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.7448ms
[debug]   Load.loadUnit(file:/C:/Users/CRUX/IdeaProjects/scalalearning/, ...) took 771.4941ms
[debug] Load.apply: load took 773.2706ms
[debug] Load.apply: resolveProjects took 0.1328ms
[debug] Load.apply: finalTransforms took 24.5639ms
[debug] Load.apply: config.delegates took 0.4519ms
[debug] Load.apply: Def.make(settings)... took 68.788ms
[debug] Load.apply: structureIndex took 27.1817ms
[debug] Load.apply: mkStreams took 0.0031ms
[info] set current project to scalalearning (in build file:/C:/Users/CRUX/IdeaProjects/scalalearning/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 61734 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 61734, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to scalalearning (in build file:/C:/Users/CRUX/IdeaProjects/scalalearning/)
[debug] > Exec(idea-shell, None, None)
